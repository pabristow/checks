[/ 
Copyright Pierre Talbot 2011.

Use, modification and distribution are subject to the
Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt
or copy at http://www.boost.org/LICENSE_1_0.txt)
]

[section:algorithm Common check algorithms]

This section will describe the algorithms used in Boost.Checks.
A check algorithm is firstly design to:

# Catch the most errors as possible that a human can do.
# Minimize the cost of the check digit - fast computation - and the size of the check digit.

We cannot have our cake and eat it, that's why we often choose
between the size or the efficiency. Critical numbers (for example 
the __IBAN) use two check digits.

The main difference with these algorithm and the other checksum algorithms 
such as CRC or cryptographic hashes, is that we don't analyse the binary 
content of the number of the lexical values meaning, so "123" is equal to 123.

[table:summary Error catching summary
[[][1 Alteration] [2 Alterations] [Twin transpositions] ]
[[Luhn] [18/18 (100%)] [] [88/90 (97.78%)]]
[[Verhoeff] [18/18 (100%)] [] [90/90 (100%)]]
]

[endsect]
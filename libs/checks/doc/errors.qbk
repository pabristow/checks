[section:errors Type of errors]

The following sections will describe some of the errors that an user or a device can make. 
Those are the most frequent and we are not exhaustive, however we will find out how well our algorithms work.
We will calculate (in a mathematical way) the probability of failures and the factors which affect it.

[section:alteration Alteration]

[h5 Single error]

If the digits are added, an alteration of one digit will always render a different sum and therefore the check digit.

[h5 Multiple error]

If more than one digit is altered, a simple sum can't ensure that the check digit will be different.
In fact it depends on the compensation of the altered digits.
For example : 1 + 2 + 3 = 6. If we alter 2 digits, the sum could become : 2 + 2 + 2 = 6. The result is equal because 1 + 3 = 2 + 2, the digits altered are compensated.

[endsect][/section:alteration Alteration]
[section:transposition Transposition]

A transposition on a simple sum is impossible to detect because the addition is commutative, the order is not important.
A solution is to associate the position of a digit with a weight.

[note A transposition error is only catched if the two digits transposed have a different weight and if their values with their weight or the weight of the other digit are not the same.]

[endsect][/section:transposition Transposition]
[section:lenght Length]

The length is not often a problem because many codes and numbers have a fixed length. 
But if the user do not specify the size, an error could be uncatched if the check digit of the new sequence of digit is equal to the last digit of this sequence.

[endsect][/section:lenght Length]
[section:shift Shift]

[endsect][/section:shift Shift]
[section:phonetic Phonetic]

[endsect][/section:phonetic Phonetic]

[endsect][/section:errors Type of errors]